% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solve_ols.R
\name{solve_ols}
\alias{solve_ols}
\title{solve_ols}
\usage{
solve_ols(A, b, cores = 1, method, iteration)
}
\arguments{
\item{A}{n*n matrix of the input system Ax=b}

\item{b}{n*1 vector of the input system Ax=b}

\item{cores}{Number of cores used in parallel computing of Jacobi Mathod. If cores=1,use sequential method, otherwise use parallel computing.}

\item{method}{Method to use. "GS"=Gauss-Seidel,"Jacobi"=Jacobi}

\item{iteration}{Number of iterations}
}
\value{
x,n*1 vector, solution of the input system Ax=b
}
\description{
Solve linear system by Gauss-Seidel, Jacobi(sequential), or Jacobi(parallel) method
}
\examples{
n=10
L <- diag(0, n)
L[(row(L) - col(L)) == 1] <- -1
U <- diag(0, n)
U[(row(U) - col(U)) == -1] <- -1
D <- diag(2, n)
a <- L+D+U
v <- as.matrix(rep(1,10))
b=a\%*\%v
solve_ols(a,b,method = "GS",iteration = 100)
solve_ols(a,b,cores=1,method = "Jacobi",iteration=100)
solve_ols(a,b,cores=2,method = "Jacobi",iteration=100)
}
